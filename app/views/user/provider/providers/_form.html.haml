
= flash_message

= form_with model: @user,
            url: (@user.new_record? ? user_provider_providers_path : user_provider_provider_path(@user)),
            html: { class: 'require-validation' }, validate: true do |f|

  - if @message_error.present?
    %div{style: "color: red"}
      %ul
        %li= @message_error

  .mb-3
    .card-body
      = f.fields_for :roles, @roles do |form|
        .col-md
          = form.label :role_type, class: 'form-label'
          %br
          - (RoleEnum::RoleTypes.list - ['owner', 'customer']).collect.each do |value|
            .form-check.form-check-inline.mt-3
              = form.radio_button :role_type, value, id: "#{value}", class: 'form-check-input'
              = form.label :role_type, I18n.t("enumerations.role_enum.role_types.#{value}"), for: value, class: 'form-check-label'
  .row
    .d-grid.gap-2.col-3.mx-auto.mb-3
      = f.submit t('.confirm', default: t("helpers.submit.save")), class: 'btn btn-secondary rounded-pill'
