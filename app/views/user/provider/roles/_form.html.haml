
= flash_message

= form_with model: @user,
            url: (@user.new_record? ? user_provider_roles_path : user_provider_role_path(@user)),
            html: { class: 'require-validation' }, validate: true do |f|

  .card.mb-4
    .card-body
      .mb-3
        = f.label :full_name, class: 'col-sm-6 col-form-label'
        = f.text_field :full_name,
                    autofocus: true,
                    class: 'form-control'
        .letter-counter.mt-2.d-flex.justify-content-end

      .mb-3
        = f.label :email, class: 'col-sm-6 col-form-label'
        = f.email_field :email, class: 'form-control'

        .letter-counter.mt-2.d-flex.justify-content-end
      = f.fields_for :roles, @roles do |form|
        .col-md
          = form.label :role_type, class: 'form-label'
          %br
          - (RoleEnum::RoleTypes.list - ['owner', 'customer']).collect.each do |value|
            .form-check.form-check-inline.mt-3
              = form.radio_button :role_type, value, id: "#{value}", class: 'form-check-input'
              = form.label :role_type, I18n.t("enumerations.role_enum.role_types.#{value}"), for: value, class: 'form-check-label'

    .row
      .d-grid.gap-2.col-3.mx-auto.mb-3
        = f.submit t('.confirm', default: t("helpers.submit.save")), class: 'btn btn-secondary rounded-pill'
